"use strict";var precacheConfig=[["/android-chrome-192x192.png","0f0ef89d6532a2a86d213392223966c8"],["/android-chrome-512x512.png","711b509347256b3470dd568884f53e66"],["/apple-touch-icon.png","2ac1e29fe842d3f66ace27f68767f409"],["/browserconfig.xml","2fc2cf278972980fff631db4f8f65f2f"],["/endgame.c03ab5c35b36179e9ee1.js","3e3a0002df1c43744824c6301749f5b2"],["/favicon-16x16.png","12345f89f8f884a92a3d5f69f9e1a3f6"],["/favicon-32x32.png","f67620f222df310b5af097a968509fad"],["/favicon.ico","cc92053a39f38782e481ecfe617f02f2"],["/game.7ac82e84b8f8ab0f9f10.js","b8837f70dfe65079effcb5487deca790"],["/help.cc6bb69b6945fa3ab920.js","e06e737c16fdea7c3238bc5b6e9a9b33"],["/index.html","5405d2ce99535c60fc7e563ba67fa596"],["/leaderboard.55b16d015804fdff6c3a.js","7e1c644d263230bbc4f4be363b7aff0e"],["/login.6fe4bcc47cddd1c3121a.js","c895afa2859dac22d27217855f503784"],["/main.dca8a2df461452f58295.js","14eac2e749a18e793bc428b39ad53847"],["/mainpage.0b8247be8cb2159e2124.js","8836e80762d5b3b160dbe20644599b00"],["/mstile-150x150.png","56c7441b6b338f85f361bbdce178d560"],["/register.d02940c223c8d37a5a00.js","90a277f88ddb8410cd4c246538e457dd"],["/robots.txt","b6216d61c03e6ce0c9aea6ca7808f7ca"],["/runtime~main.d0f34af9551c77d16822.js","3da9e506184713dd924859879400eb45"],["/safari-pinned-tab.svg","273c54437be35a307af07192673e9871"],["/settings.a3980946fa22699c35d2.js","3cb7ac651f4f0e677c6bc73d7f829472"],["/vendors~endgame~leaderboard~login~register.0ed258961f9918ba845f.js","c6ca99457d82b3cfda99dd6357966e20"],["/vendors~main.0002f81e96080d434d05.js","163bb6ca1e4b6cc959f8fe9b487a0b9c"]],cacheName="sw-precache-v3-sharlushkaMk1-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,n){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=n),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(n){return new Response(n,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,n,a,t){var r=new URL(e);return t&&r.pathname.match(t)||(r.search+=(r.search?"&":"")+encodeURIComponent(n)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,n){if(0===e.length)return!0;var a=new URL(n).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,n){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return n.every(function(n){return!n.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var n=e[0],a=e[1],t=new URL(n,self.location),r=createCacheKey(t,hashParamName,a,/\.\w{8}\./);return[t.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(n){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!n.has(a)){var t=new Request(a,{credentials:"same-origin"});return fetch(t).then(function(n){if(!n.ok)throw new Error("Request for "+a+" returned a response with status "+n.status);return cleanResponse(n).then(function(n){return e.put(a,n)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var n=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!n.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var n,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(n=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,"index.html"),n=urlsToCacheKeys.has(a));!n&&"navigate"===e.request.mode&&isPathWhitelisted([],e.request.url)&&(a=new URL("/index.html",self.location).toString(),n=urlsToCacheKeys.has(a)),n&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(n){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,n),fetch(e.request)}))}});