{"version":3,"sources":["webpack:///./node_modules/vue-chartist/index.js"],"names":["exports","install","Vue","options","arguments","length","undefined","Object","assign","messageNoData","classNoData","chartist","__webpack_require__","prototype","$chartist","component","props","ratio","type","String","default","data","series","labels","required","validator","val","eventHandlers","Array","responsiveOptions","chart","error","onError","message","noData","watch","handler","deep","mounted","this","draw","methods","clear","haveNoData","setNoData","$refs","setEventHandlers","distributeSeries","every","isArray","redraw","update","resetEventHandlers","oldEventHandler","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","item","value","off","event","fn","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_item","on","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","render","h","ref","class","obj","key","defineProperty","enumerable","configurable","writable"],"mappings":"4FAIAA,EAAAC,QAAA,SAAAC,GACA,IAAAC,EAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAGAD,EAAAI,OAAAC,OAAA,GADA,CAAwBC,cAAA,GAAAC,YAAA,aACIP,GAE5BD,EAAAS,SAAiBC,EAAQ,QACzBV,EAAAW,UAAAC,UAA4BF,EAAQ,QAEpCV,EAAAa,UAAA,YACAC,MAAA,CACAC,MAAA,CACAC,KAAAC,OACAC,QAAA,aAEAC,KAAA,CACAH,KAAAX,OACAa,QAAA,WACA,OACAE,OAAA,GACAC,OAAA,MAIApB,QAAA,CACAe,KAAAX,OACAa,QAAA,WACA,WAGAF,KAAA,CACAA,KAAAC,OACAK,UAAA,EACAC,UAAA,SAAAC,GACA,cAAAA,GAAA,SAAAA,GAAA,QAAAA,IAGAC,cAAA,CACAT,KAAAU,MACAR,QAAA,WACA,WAGAS,kBAAA,CACAX,KAAAU,MACAR,QAAA,WACA,YAIAC,KAAA,WACA,OACAS,MAAA,KACAC,MAAA,CAAgBC,SAAA,EAAAC,QAAA,IAChBC,QAAA,EACAD,QAAA,GACAvB,YAAAP,EAAAO,cAIAyB,MAAA,CACAlB,MAAA,SACAd,QAAA,SACAkB,KAAA,CAAae,QAAA,SAAAC,MAAA,GACbnB,KAAA,OACAS,cAAA,sBAEAW,QAAA,WACAC,KAAAC,QAGAC,QAAA,CACAC,MAAA,WACAH,KAAAL,QAAA,EACAK,KAAAN,QAAA,GACAM,KAAAR,MAAAC,UACAO,KAAAR,MAAA,CAAwBC,SAAA,EAAAC,QAAA,MAGxBO,KAAA,WACA,GAAAD,KAAAI,aACA,OAAAJ,KAAAK,YAEAL,KAAAG,QACAH,KAAAT,MAAA,IAAAS,KAAAzB,UAAAyB,KAAArB,MAAAqB,KAAAM,MAAAf,MAAAS,KAAAlB,KAAAkB,KAAApC,QAAAoC,KAAAV,mBACAU,KAAAO,oBAEAH,WAAA,WACA,OAAAJ,KAAAlB,OAAAkB,KAAAlB,KAAAC,QAAAiB,KAAAlB,KAAAC,OAAAjB,OAAA,WAAAkC,KAAArB,OAAAqB,KAAApC,QAAA4C,kBAAAR,KAAAlB,KAAAC,OAAA0B,MAAA,SAAA1B,GACA,OAAAM,MAAAqB,QAAA3B,IACAA,EAAAjB,QAEAiB,EAAAD,KAAAhB,UAGA6C,OAAA,WACA,OAAAX,KAAAR,MAAAC,QACAO,KAAAC,OACSD,KAAAI,aACTJ,KAAAK,aAEAL,KAAAG,aACAH,KAAAT,MAAAqB,OAAAZ,KAAAlB,KAAAkB,KAAApC,WAEAiD,mBAAA,SAAAzB,EAAA0B,GACA,GAAAd,KAAAT,MAAA,CAGA,IAAAwB,GAAA,EACAC,GAAA,EACAC,OAAAlD,EAEA,IACA,QAAAmD,EAAAC,EAAAL,EAAAM,OAAAC,cAAyEN,GAAAG,EAAAC,EAAAG,QAAAC,MAAgER,GAAA,GACzI,IAAAS,EAAAN,EAAAO,MAEAzB,KAAAT,MAAAmC,IAAAF,EAAAG,MAAAH,EAAAI,KAES,MAAAC,GACTb,GAAA,EACAC,EAAAY,EACS,QACT,KACAd,GAAAI,EAAAW,QACAX,EAAAW,SAEW,QACX,GAAAd,EACA,MAAAC,GAKA,IAAAc,GAAA,EACAC,GAAA,EACAC,OAAAlE,EAEA,IACA,QAAAmE,EAAAC,EAAA/C,EAAAgC,OAAAC,cAAyEU,GAAAG,EAAAC,EAAAb,QAAAC,MAAmEQ,GAAA,GAC5I,IAAAK,EAAAF,EAAAT,MAEAzB,KAAAT,MAAA8C,GAAAD,EAAAT,MAAAS,EAAAR,KAES,MAAAC,GACTG,GAAA,EACAC,EAAAJ,EACS,QACT,KACAE,GAAAI,EAAAL,QACAK,EAAAL,SAEW,QACX,GAAAE,EACA,MAAAC,MAKA1B,iBAAA,WACA,GAAAP,KAAAZ,cAAA,CACA,IAAAkD,GAAA,EACAC,GAAA,EACAC,OAAAzE,EAEA,IACA,QAAA0E,EAAAC,EAAA1C,KAAAZ,cAAAgC,OAAAC,cAAgFiB,GAAAG,EAAAC,EAAApB,QAAAC,MAAmEe,GAAA,GACnJ,IAAAd,EAAAiB,EAAAhB,MAEAzB,KAAAT,MAAA8C,GAAAb,EAAAG,MAAAH,EAAAI,KAEW,MAAAC,GACXU,GAAA,EACAC,EAAAX,EACW,QACX,KACAS,GAAAI,EAAAZ,QACAY,EAAAZ,SAEa,QACb,GAAAS,EACA,MAAAC,MAMAnC,UAAA,WACAL,KAAAR,MAAA,CAAsBC,SAAA,EAAAC,QAAA9B,EAAAM,eACtB8B,KAAAL,QAAA,EACAK,KAAAN,QAAAM,KAAAR,MAAAE,UAGAiD,OAAA,SAAAC,GACA,OAAAA,EAAA,OACAC,IAAA,QACAC,MAAA,CAAA9C,KAAAtB,OArMAqE,EAqMA,GArMAC,EAqMgDhD,KAAA7B,YArMhDsD,EAqMgDzB,KAAAL,OArMLqD,KAAAD,EAAkB/E,OAAAiF,eAAAF,EAAAC,EAAA,CAAkCvB,QAAAyB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAgFL,EAAAC,GAAAvB,EAAoBsB,KAsM5L/C,KAAAN,SAtMP,IAAAqD,EAAAC,EAAAvB","file":"npm.vue-chartist.e2d7e9b179a05f527694.js","sourcesContent":["'use strict';\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexports.install = function (Vue) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var defaultOptions = { messageNoData: '', classNoData: 'ct-nodata' };\n  options = Object.assign({}, defaultOptions, options);\n\n  Vue.chartist = require('chartist');\n  Vue.prototype.$chartist = require('chartist');\n\n  Vue.component('Chartist', {\n    props: {\n      ratio: {\n        type: String,\n        default: 'ct-square'\n      },\n      data: {\n        type: Object,\n        default: function _default() {\n          return {\n            series: [],\n            labels: []\n          };\n        }\n      },\n      options: {\n        type: Object,\n        default: function _default() {\n          return {};\n        }\n      },\n      type: {\n        type: String,\n        required: true,\n        validator: function validator(val) {\n          return val === 'Pie' || val === 'Line' || val === 'Bar';\n        }\n      },\n      eventHandlers: {\n        type: Array,\n        default: function _default() {\n          return [];\n        }\n      },\n      responsiveOptions: {\n        type: Array,\n        default: function _default() {\n          return [];\n        }\n      }\n    },\n    data: function data() {\n      return {\n        chart: null,\n        error: { onError: false, message: '' },\n        noData: false,\n        message: '',\n        classNoData: options.classNoData\n      };\n    },\n\n    watch: {\n      ratio: 'redraw',\n      options: 'redraw',\n      data: { handler: 'redraw', deep: true },\n      type: 'draw',\n      eventHandlers: 'resetEventHandlers'\n    },\n    mounted: function mounted() {\n      this.draw();\n    },\n\n    methods: {\n      clear: function clear() {\n        this.noData = false;\n        this.message = '';\n        if (this.error.onError) {\n          this.error = { onError: false, message: '' };\n        }\n      },\n      draw: function draw() {\n        if (this.haveNoData()) {\n          return this.setNoData();\n        }\n        this.clear();\n        this.chart = new this.$chartist[this.type](this.$refs.chart, this.data, this.options, this.responsiveOptions);\n        this.setEventHandlers();\n      },\n      haveNoData: function haveNoData() {\n        return !this.data || !this.data.series || this.data.series.length < 1 || this.type !== 'Pie' && !this.options.distributeSeries && this.data.series.every(function (series) {\n          if (Array.isArray(series)) {\n            return !series.length;\n          }\n          return !series.data.length;\n        });\n      },\n      redraw: function redraw() {\n        if (this.error.onError) {\n          return this.draw();\n        } else if (this.haveNoData()) {\n          return this.setNoData();\n        }\n        this.clear();\n        this.chart.update(this.data, this.options);\n      },\n      resetEventHandlers: function resetEventHandlers(eventHandlers, oldEventHandler) {\n        if (!this.chart) {\n          return;\n        }\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = oldEventHandler[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var item = _step.value;\n\n            this.chart.off(item.event, item.fn);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = eventHandlers[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var _item = _step2.value;\n\n            this.chart.on(_item.event, _item.fn);\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      },\n      setEventHandlers: function setEventHandlers() {\n        if (this.eventHandlers) {\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = this.eventHandlers[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var item = _step3.value;\n\n              this.chart.on(item.event, item.fn);\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n        }\n      },\n      setNoData: function setNoData() {\n        this.error = { onError: true, message: options.messageNoData };\n        this.noData = true;\n        this.message = this.error.message;\n      }\n    },\n    render: function render(h) {\n      return h('div', {\n        ref: 'chart',\n        'class': [this.ratio, _defineProperty({}, this.classNoData, this.noData)]\n      }, this.message);\n    }\n  });\n};\n"],"sourceRoot":""}